public Set<Integer> validateEmployerBankDetails(UpdateEmpBankDetailsRequest request) {
    Set<Integer> errors = new HashSet<>();

    if (request == null) {
        errors.add(2000); // Error code for null request
        return errors;
    }

    if (request.getEmployerBankDetail() == null) {
        errors.add(2002); // Error code for missing employer details
        return errors;
    }

    // Ensure employerBankDetail is non-null before calling sanitizeRequest()
    sanitizeRequest(request.getEmployerBankDetail());

    return errors;
}

private void sanitizeRequest(EmployerBankDetail employerBankDetail) {
    if (employerBankDetail == null) {
        return; // Avoid NPE
    }@Test
void testValidateEmployerBankDetails_nullFields() throws ValidationException {
    UpdateEmpBankDetailsRequest request = new UpdateEmpBankDetailsRequest();
    request.setEmployerBankDetail(null); // Simulating a null EmployerBankDetail

    Set<Integer> errors = assertDoesNotThrow(() -> validator.validateEmployerBankDetails(request),
        "Validator should handle null fields gracefully without throwing NullPointerException.");

    assertFalse(errors.isEmpty(), "Expected validation errors for null fields.");
    assertTrue(errors.contains(2002), "Expected error code 2002 for missing employer details.");
}


    if (employerBankDetail.getEmployerGroupId() == null) {
        employerBankDetail.setEmployerGroupId(""); // Default empty value
    }

    // Add further checks for other fields...
}

